<Application x:Class="API_Reporting.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:API_Reporting"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
		<!-- Upskilled Colours -->
		<Color x:Key="UpsPrimaryBlue">#FF1548E0</Color>
		<Color x:Key="UpsPrimaryPurple">#FF7B1CE9</Color>
		<Color x:Key="UpsPrimaryGreen">#FF02A878</Color>
		<Color x:Key="UpsPrimaryYellow">#FFCC840A</Color>
		<Color x:Key="UpsPrimaryRed">#FF90104C</Color>

		<Color x:Key="UpsSecondaryBlue">#FF1696EC</Color>
		<Color x:Key="UpsSecondaryPurple">#FFA65AFA</Color>
		<Color x:Key="UpsSecondaryGreen">#FF4ADCB0</Color>
		<Color x:Key="UpsSecondaryYellow">#FFF2B81E</Color>
		<Color x:Key="UpsSecondaryRed">#FFEC2262</Color>

		<Color x:Key="UpsLightGrey">#FFF6F6Fa</Color>
		<Color x:Key="UpsMediumGrey">#FFAAAAB4</Color>
		<Color x:Key="UpsDarkGrey">#FF2C2C36</Color>

		<!--Control colors.-->
        <Color x:Key="WindowColor">#FFFFFFFF</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

		<Color x:Key="ControlMouseOverColor">#4ADCB0</Color>
		<Color x:Key="ControlPressedColor">#FF02A878</Color>

        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
		<Color x:Key="BorderLightColor">#FFA65AFA</Color>
        <Color x:Key="BorderMediumColor">#FF7B1CE9</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF" Offset="0" />
                    <GradientStop Color="#600000FF" Offset="0.4" />
                    <GradientStop Color="#600000FF" Offset="0.6" />
                    <GradientStop Color="#000000FF" Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>


        <!-- Template for tab control -->
        <Style x:Key="tabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TabPanel x:Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                            <Border x:Name="Border" Grid.Row="1" BorderThickness="0" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" Background="{x:Null}">
                                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Template for tab item -->
		<Style x:Key="tabItemsStyle" TargetType="{x:Type TabItem}">
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Padding" Value="24,12" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid x:Name="Root">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource UpsSecondaryPurple}" />
											</ColorAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Border">
												<EasingThicknessKeyFrame KeyTime="0" Value="1,1,1,0" />
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border" Margin="0" BorderThickness="0" CornerRadius="0">
								<Border.BorderBrush>
									<SolidColorBrush Color="{DynamicResource UpsSecondaryPurple}" />
								</Border.BorderBrush>
								<Border.Background>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop Color="{DynamicResource UpsPrimaryPurple}" Offset="0.0" />
												<GradientStop Color="{DynamicResource UpsPrimaryPurple}" Offset="1.0" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True" />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Panel.ZIndex" Value="100" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
        
		<!-- Default Page styling -->
		<Style x:Key="defaultPageStyle" TargetType="Page">
			<Setter Property="Page.Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
						<GradientStop Color="{StaticResource UpsPrimaryPurple}" Offset="0"/>
						<GradientStop Color="{StaticResource UpsPrimaryBlue}" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>
        
		<!-- Nav side panel styling -->
		<Style x:Key="navPanelStyle" TargetType="StackPanel">
			<Setter Property="Margin" Value="0,0,0,0"></Setter>
			<Setter Property="Orientation" Value="Vertical"></Setter>
			<Setter Property="Background">
				<Setter.Value>
					<SolidColorBrush Color="{DynamicResource UpsDarkGrey}" />
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Nav button styling -->
		<Style x:Key="navButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="BorderBrush" Value="{x:Null}"></Setter>
			<Setter Property="Background" Value="{x:Null}"></Setter>
			<Setter Property="BorderThickness" Value="0"></Setter>
			<Setter Property="Height" Value="40"></Setter>
			<Setter Property="Cursor" Value="Hand"></Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ButtonBase}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="Button.IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border">
									<Setter.Value>
										<SolidColorBrush Color="{StaticResource UpsMediumGrey}" />
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="True">
								<Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.7"/>
								<Setter Property="Cursor" Value="Arrow"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Nav image styling -->
		<Style x:Key="navImageStyle" TargetType="{x:Type Image}">
			<Setter Property="Margin" Value="8"></Setter>
		</Style>

		<!-- Base Grid style -->
        <Style x:Key="baseGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0" />
        </Style>

        <!-- Main header style -->
        <Style x:Key="headerTextStyle">
            <Setter Property="Label.VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Label.FontFamily" Value="Mont Bold"></Setter>
            <Setter Property="Label.FontSize" Value="18"></Setter>
            <Setter Property="Label.Foreground" Value="#FFFFFFFF"></Setter>
        </Style>

        <!-- Label style -->
        <Style x:Key="labelStyle" TargetType="{x:Type Label}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>

        <!-- DataGrid header style -->
        <Style x:Key="columnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Height" Value="35" />
            <Setter Property="Padding" Value="5" />
			<Setter Property="Background">
				<Setter.Value>
					<SolidColorBrush Color="{StaticResource UpsSecondaryPurple}"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Foreground" Value="#FFFFFFFF" />
        </Style>

        <!-- List header style -->
        <Style x:Key="listHeaderStyle" TargetType="{x:Type Border}">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="{x:Null}" />
        </Style>
		
		<!-- Header Icon Style -->
		<Style x:Key="headerIconStyle" TargetType="{x:Type Image}">
			<Setter Property="Margin" Value="12" />
		</Style>
		
        <!-- List header text style -->
        <Style x:Key="listHeaderTextStyle" TargetType="{x:Type Label}">
			<Setter Property="Padding" Value="8,0,0,8" />
			<Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Foreground" Value="#FFFFFFFF" />
			<Setter Property="FontFamily" Value="Mont Semibold" />
		</Style>

        <!-- Button style -->
		<Style x:Key="buttonStyle" TargetType="{x:Type Button}">
			<Setter Property="Margin" Value="10" />
			<Setter Property="Padding" Value="16,8" />
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="BorderBrush" Value="{x:Null}" />
			<Setter Property="FontFamily" Value="Mont Semibold" />
			<Setter Property="Foreground" Value="#FFFFFFFF" />
			<Setter Property="Background">
				<Setter.Value>
					<SolidColorBrush Color="{StaticResource UpsSecondaryGreen}"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background">
									<Setter.Value>
										<SolidColorBrush Color="{StaticResource UpsSecondaryGreen}" />
									</Setter.Value>
								</Setter>
								<Setter Property="Opacity" Value="0.75" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background">
									<Setter.Value>
										<SolidColorBrush Color="{StaticResource UpsSecondaryGreen}"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.5"/>
								<Setter Property="Cursor" Value="Arrow"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
	</Application.Resources>
</Application>
